{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Header from '../Header/Header';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\n// const ApplyForSchemes = ({ schemes, appId }) => {\n//   const [fundsDisbursed, setFundsDisbursed] = useState(false);\n//   const navigate = useNavigate();\n//   const [pdfData, setPdfData] = useState(null);\n\n//   const formatDate = (dateString) => {\n//     const date = new Date(dateString);\n//     const day = date.getDate().toString().padStart(2, '0');\n//     const month = (date.getMonth() + 1).toString().padStart(2, '0');\n//     const year = date.getFullYear();\n\n//     return `${day}-${month}-${year}`;\n//   };\n\n//   const handleApply = async (schemeId,schemeName) => {\n//     console.log('I got clicked!');\n//     try {\n//       const response = await axios.post(`http://localhost:4000/student/apply-scheme`, { appId: appId, schemeId: schemeId, schemeName: schemeName });\n//       console.log(response.data);\n//       if (response.data.success===true) {\n//         alert(response.data.message);\n//       } else {\n//         alert(response.data.message);\n//       }\n//     } catch(error) {\n//       console.error(\"Error applying for scheme: \",error);\n//     }\n//   }\n\n//   return (\n//     <div className=\"container-fluid\">\n//       <h4>Current Available Scholarships</h4>\n//       {schemes.length > 0 ? (<table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th>Scheme Name</th>\n//             <th>Provider Name</th>\n//             <th>Income Criteria(less than)</th>\n//             <th>Field of Study</th>\n//             <th>Start Date</th>\n//             <th>End Date</th>\n//             <th>Apply</th>\n//             <th>Details</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {schemes.map((scheme) => (\n//             <tr key={scheme.sch_id}>\n//               <td>{scheme.sch_name}</td>\n//               <td>{scheme.organisation_name}</td>\n//               <td>{scheme.income_criteria}</td>\n//               <td>{scheme.field_of_study}</td>\n//               <td>{formatDate(scheme.start_date)}</td>\n//               <td>{formatDate(scheme.end_date)}</td>\n//               <td><button className='btn btn-success' onClick={() => handleApply(scheme.sch_id,scheme.sch_name)}>Apply</button></td>\n//               <td><button className='btn btn-primary'>Details</button></td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>) : (\n//         <p>No schemes online!</p>\n//       )}\n//       {/*\n//       <div>\n//         <button className=\"btn btn-primary mr-2 d-print-none\" onClick={handlePrint}>Print</button>\n//         {fundsDisbursed ? (\n//           <button className=\"btn btn-primary d-print-none\" onClick={handlePrintCertificate}>Print 80G Certificate</button>\n//         ) : (\n//           <button className=\"btn btn-success d-print-none\" onClick={handleDisburseFunds}>Disbursed Funds to Applicants</button>\n//         )}\n//       </div>\n//       */}\n//     </div>\n//   );\n// };\n\n// export default ApplyForSchemes;","map":{"version":3,"names":["React","useState","useEffect","Header","useNavigate","useParams","axios"],"sources":["C:/Users/asmir/Desktop/Blockchain-based-National-Scholarship-Portal/code/client/src/components/Scholarship/ApplyForSchemes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../Header/Header';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// const ApplyForSchemes = ({ schemes, appId }) => {\r\n//   const [fundsDisbursed, setFundsDisbursed] = useState(false);\r\n//   const navigate = useNavigate();\r\n//   const [pdfData, setPdfData] = useState(null);\r\n\r\n//   const formatDate = (dateString) => {\r\n//     const date = new Date(dateString);\r\n//     const day = date.getDate().toString().padStart(2, '0');\r\n//     const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n//     const year = date.getFullYear();\r\n  \r\n//     return `${day}-${month}-${year}`;\r\n//   };\r\n\r\n//   const handleApply = async (schemeId,schemeName) => {\r\n//     console.log('I got clicked!');\r\n//     try {\r\n//       const response = await axios.post(`http://localhost:4000/student/apply-scheme`, { appId: appId, schemeId: schemeId, schemeName: schemeName });\r\n//       console.log(response.data);\r\n//       if (response.data.success===true) {\r\n//         alert(response.data.message);\r\n//       } else {\r\n//         alert(response.data.message);\r\n//       }\r\n//     } catch(error) {\r\n//       console.error(\"Error applying for scheme: \",error);\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"container-fluid\">\r\n//       <h4>Current Available Scholarships</h4>\r\n//       {schemes.length > 0 ? (<table className=\"table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Scheme Name</th>\r\n//             <th>Provider Name</th>\r\n//             <th>Income Criteria(less than)</th>\r\n//             <th>Field of Study</th>\r\n//             <th>Start Date</th>\r\n//             <th>End Date</th>\r\n//             <th>Apply</th>\r\n//             <th>Details</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {schemes.map((scheme) => (\r\n//             <tr key={scheme.sch_id}>\r\n//               <td>{scheme.sch_name}</td>\r\n//               <td>{scheme.organisation_name}</td>\r\n//               <td>{scheme.income_criteria}</td>\r\n//               <td>{scheme.field_of_study}</td>\r\n//               <td>{formatDate(scheme.start_date)}</td>\r\n//               <td>{formatDate(scheme.end_date)}</td>\r\n//               <td><button className='btn btn-success' onClick={() => handleApply(scheme.sch_id,scheme.sch_name)}>Apply</button></td>\r\n//               <td><button className='btn btn-primary'>Details</button></td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>) : (\r\n//         <p>No schemes online!</p>\r\n//       )}\r\n//       {/*\r\n//       <div>\r\n//         <button className=\"btn btn-primary mr-2 d-print-none\" onClick={handlePrint}>Print</button>\r\n//         {fundsDisbursed ? (\r\n//           <button className=\"btn btn-primary d-print-none\" onClick={handlePrintCertificate}>Print 80G Certificate</button>\r\n//         ) : (\r\n//           <button className=\"btn btn-success d-print-none\" onClick={handleDisburseFunds}>Disbursed Funds to Applicants</button>\r\n//         )}\r\n//       </div>\r\n//       */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ApplyForSchemes;\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}